  Introduction : 'Attacks with BigGAN.'
  
  optim : 'GAN_based'   #optim method, ['GAN_based', 'GAN_free']
  cost_fn : 'sim_cmpr0'   # the type of loss function for gradient inversion attacks.
  set_seed : 123       # random seed. Following GGL, we set 123 as seed for BigGAN(ImageNet).
  indices : 'def'      # decide which part of gradients to be involved in the final gradients match loss.
  weights : 'equal'    # weight of every graident scalar's matching loss
  init : 'randn'     # how we initial the original latent code.
  model : 'ResNet18'   # FL model
  restarts : 4

  num_images : 1   # the number of images to reconstruct at a batch
  num_exp : 10     # the number of experiments.
  target_id : 0
  lr : 0.03
  total_variation : 0.0001     #the coefficient of total variation
  bn_stat : 0       #choose if we use bn statistic to regularizer
  image_norm : 0.000001    #the coefficient of norm regularizer
  group_lazy : 0    #choose if we use group lazy regularization

  max_iterations : 1000   #Maximum number of iterations for latent reconstruction.
  
  #For GIAS
  gias_iterations : 8000  #Maximum number of gias iterations for reconstruction.
  gias_lr : 0.00001   #For biggan, we'd better choose smaller learning rate 
  
  # For input data
  generative_model : 'BigGAN'
  gen_dataset : 'ImageNet64'
  dataset : 'IMAGENET_IO'
  data_path : '/home/hans/WorkSpace/Data/ILSVRC/2012/val'    # specify your dataset path

  #For output data
  exp_name : 'ex1_biggan_imagenet'   #Same latent space search
  output_dir : '/home/hans/WorkSpace/Models/AdaDefense/GIFD/'
  #params for algorithm choice
  gifd : true
  gias : false
  ggl : false

  #For GIFD with biggan
  steps: [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]  #Total 13000
  lr_io: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]

  start_layer: 0
  end_layer: 13   #fixed

  # For l-1 projection
  project : true
  do_project_gen_out: true
  do_project_noises: false
  do_project_latent: false
  max_radius_gen_out: [1000, 2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500, 6000, 6500, 7000, 7500]
  max_radius_noises: [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]   # designed for stylegan2, here unused.
  max_radius_latent: [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]   # designed for stylegan2, here unused.
  

  # The pre-trained StyleGAN checkpoint
  ckpt: None

  #LR pace for training
  lr_same_pace: false 

  #Defense parameter
  defense_method : None
  defense_setting : 
      - noise : None
      - clipping : None
      - compression : None
      - representation : None

  #For CMA-ES in GGL
  KLD : 0.1  # Recommendation: 0.1 for biggan, 0.02 for stylegan2
  cma_budget : 800
  num_sample : 50  # CMA-ESsample times
  
  #cmd instruction
  # python GIFD_test.py --config configs_biggan.yml
  